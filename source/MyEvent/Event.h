#pragma once

#include <vector>
#include <string>

using namespace std;

#define EVENT_CONNECT 1
#define EVENT_DISCONNECT 2
#define EVENT_ON_CONNECTED 3
#define EVENT_ON_DISCONNECTED 4
#define EVENT_ON_TCP_SEND 5
#define EVENT_ON_TCP_RECV 6
#define EVENT_ON_SEQUENCE_GAP 10
#define EVENT_ON_RESEND_LAST_RESEND_REQUEST 11
#define EVENT_DO_RESEND_REQUEST 12
#define EVENT_DO_HEART_BEAT 13
#define EVENT_DO_TEST_REQUEST 14
#define EVENT_DO_REQ_LOGOUT 15
#define EVENT_DO_REQ_NEW_ORDER 20
#define EVENT_DO_REQ_ORDER_CANCEL 21
#define EVENT_DO_REQ_ORDER_CANCEL_REPLACE 22

#define EVENT_INSERT_ORDER 100
#define EVENT_INSERT_ORDER_CANCEL 101
#define EVENT_RTN_ORDER 102
#define EVENT_RTN_TRADE 103
#define EVENT_ERR_RTN_ORDER_CANCEL 104

#define EVENT_ON_FIX_MESSAGE 10000
#define EVENT_ON_FIX_CONNECTED 10001
#define EVENT_ON_FIX_DISCONNECTED 10002
#define EVENT_ON_FIX_RSP_LOGON 10003
#define EVENT_ON_FIX_RSP_LOGOUT 10004
#define EVENT_ON_FIX_RSP_SESSION_LEVEL_REJECT 10005
#define EVENT_ON_FIX_EXECUTION_REPORT 10006
#define EVENT_ON_FIX_RSP_ORDER_CANCEL_REJECT 10007


struct Event
{
	int EventID;

	static Event* Allocate();
	virtual void Free();
};
